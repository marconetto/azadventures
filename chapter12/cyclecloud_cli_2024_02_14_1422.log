+ showmsg 'Create resource group: nettocc20240214v4'
+ msg='Create resource group: nettocc20240214v4'
+ printf '[33m%-70s[0m' 'Create resource group: nettocc20240214v4'
+ [[ -z 'mytagname1=mytagvalue1' 'mytagname2=mytagvalue2' ]]
+ cmd='az group create --location '\''eastus'\'' \
         --name '\''nettocc20240214v4'\'' \
         --tags '\''mytagname1=mytagvalue1'\'' '\''mytagname2=mytagvalue2'\'''
+ echo 'az group create --location '\''eastus'\'' \
         --name '\''nettocc20240214v4'\'' \
         --tags '\''mytagname1=mytagvalue1'\'' '\''mytagname2=mytagvalue2'\'''
az group create --location 'eastus' \
         --name 'nettocc20240214v4' \
         --tags 'mytagname1=mytagvalue1' 'mytagname2=mytagvalue2'
+ eval 'az group create --location '\''eastus'\'' \
         --name '\''nettocc20240214v4'\'' \
         --tags '\''mytagname1=mytagvalue1'\'' '\''mytagname2=mytagvalue2'\'''
++ az group create --location eastus --name nettocc20240214v4 --tags mytagname1=mytagvalue1 mytagname2=mytagvalue2
{
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4",
  "location": "eastus",
  "managedBy": null,
  "name": "nettocc20240214v4",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": {
    "mytagname1": "mytagvalue1",
    "mytagname2": "mytagvalue2"
  },
  "type": "Microsoft.Resources/resourceGroups"
}
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ create_vnet_subnet
+ showmsg 'Create VNET/VSUBNET: nettocc20240214v4VNET/nettocc20240214v4SUBNET'
+ msg='Create VNET/VSUBNET: nettocc20240214v4VNET/nettocc20240214v4SUBNET'
+ printf '[33m%-70s[0m' 'Create VNET/VSUBNET: nettocc20240214v4VNET/nettocc20240214v4SUBNET'
+ az network vnet create -g nettocc20240214v4 -n nettocc20240214v4VNET --address-prefix 10.63.0.0/16 --subnet-name nettocc20240214v4SUBNET --subnet-prefixes 10.63.0.0/21
{
  "newVNet": {
    "addressSpace": {
      "addressPrefixes": [
        "10.63.0.0/16"
      ]
    },
    "enableDdosProtection": false,
    "etag": "W/\"0c36952b-b308-4665-ba43-a57181805abe\"",
    "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Network/virtualNetworks/nettocc20240214v4VNET",
    "location": "eastus",
    "name": "nettocc20240214v4VNET",
    "provisioningState": "Succeeded",
    "resourceGroup": "nettocc20240214v4",
    "resourceGuid": "fbfb4879-a522-48fd-af48-a36572790466",
    "subnets": [
      {
        "addressPrefix": "10.63.0.0/21",
        "delegations": [],
        "etag": "W/\"0c36952b-b308-4665-ba43-a57181805abe\"",
        "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Network/virtualNetworks/nettocc20240214v4VNET/subnets/nettocc20240214v4SUBNET",
        "name": "nettocc20240214v4SUBNET",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "provisioningState": "Succeeded",
        "resourceGroup": "nettocc20240214v4",
        "type": "Microsoft.Network/virtualNetworks/subnets"
      }
    ],
    "type": "Microsoft.Network/virtualNetworks",
    "virtualNetworkPeerings": []
  }
}
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ peer_vpn
+ set +e
+ showmsg 'VPNRG/VPNVNET required for testing cyclecloud access'
+ msg='VPNRG/VPNVNET required for testing cyclecloud access'
+ printf '[33m%-70s[0m' 'VPNRG/VPNVNET required for testing cyclecloud access'
+ '[' -z nettovpn2 ']'
+ '[' -z nettovpn2vnet1 ']'
+ echo 'Peering vpn with created vnet'
Peering vpn with created vnet
+ URL=https://raw.githubusercontent.com/marconetto/azadventures/main/chapter3/create_peering_vpn.sh
+ curl -O --head --fail https://raw.githubusercontent.com/marconetto/azadventures/main/chapter3/create_peering_vpn.sh
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  0  1706    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
+ curl -O -s --head --fail https://raw.githubusercontent.com/marconetto/azadventures/main/chapter3/create_peering_vpn.sh
+ echo 'File exists. Downloading...https://raw.githubusercontent.com/marconetto/azadventures/main/chapter3/create_peering_vpn.sh'
File exists. Downloading...https://raw.githubusercontent.com/marconetto/azadventures/main/chapter3/create_peering_vpn.sh
+ curl https://raw.githubusercontent.com/marconetto/azadventures/main/chapter3/create_peering_vpn.sh -O -s
+ bash ./create_peering_vpn.sh nettovpn2 nettovpn2vnet1 nettocc20240214v4 nettocc20240214v4VNET
---- Starting VPN Peering ----
RGVMVNET=nettocc20240214v4
VMVNET=nettocc20240214v4VNET
RGGWVNET=nettovpn2
GWVNET=nettovpn2vnet1
GWVNET_TO_VMVNET=nettovpn2-nettovpn2vnet1-TO-nettocc20240214v4-nettocc20240214v4VNET
VMVNET_TO_GWVNET=nettocc20240214v4-nettocc20240214v4VNET-TO-nettovpn2-nettovpn2vnet1
VM VNET ID=/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Network/virtualNetworks/nettocc20240214v4VNET
+ az network vnet peering create --name nettovpn2-nettovpn2vnet1-TO-nettocc20240214v4-nettocc20240214v4VNET --resource-group nettovpn2 --vnet-name nettovpn2vnet1 --remote-vnet ''\''/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Network/virtualNetworks/nettocc20240214v4VNET'\''' --allow-vnet-access --allow-gateway-transit --allow-forwarded-traffic
{
  "allowForwardedTraffic": true,
  "allowGatewayTransit": true,
  "allowVirtualNetworkAccess": true,
  "doNotVerifyRemoteGateways": false,
  "etag": "W/\"67b72b9b-d8a3-4a53-8706-29696318798d\"",
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettovpn2/providers/Microsoft.Network/virtualNetworks/nettovpn2vnet1/virtualNetworkPeerings/nettovpn2-nettovpn2vnet1-TO-nettocc20240214v4-nettocc20240214v4VNET",
  "name": "nettovpn2-nettovpn2vnet1-TO-nettocc20240214v4-nettocc20240214v4VNET",
  "peeringState": "Initiated",
  "peeringSyncLevel": "RemoteNotInSync",
  "provisioningState": "Succeeded",
  "remoteAddressSpace": {
    "addressPrefixes": [
      "10.63.0.0/16"
    ]
  },
  "remoteVirtualNetwork": {
    "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Network/virtualNetworks/nettocc20240214v4VNET",
    "resourceGroup": "nettocc20240214v4"
  },
  "remoteVirtualNetworkAddressSpace": {
    "addressPrefixes": [
      "10.63.0.0/16"
    ]
  },
  "resourceGroup": "nettovpn2",
  "resourceGuid": "acacc09f-27cb-019e-3dfe-85576d58a27b",
  "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
  "useRemoteGateways": false
}
+ check_error 0
+ error=0
+ [[ 0 -ne 0 ]]
+ set +x
GW VNET ID=/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettovpn2/providers/Microsoft.Network/virtualNetworks/nettovpn2vnet1
+ az network vnet peering create --name nettocc20240214v4-nettocc20240214v4VNET-TO-nettovpn2-nettovpn2vnet1 --resource-group nettocc20240214v4 --vnet-name nettocc20240214v4VNET --remote-vnet ''\''/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettovpn2/providers/Microsoft.Network/virtualNetworks/nettovpn2vnet1'\''' --allow-vnet-access --allow-forwarded-traffic --use-remote-gateways
{
  "allowForwardedTraffic": true,
  "allowGatewayTransit": false,
  "allowVirtualNetworkAccess": true,
  "doNotVerifyRemoteGateways": false,
  "etag": "W/\"b1f16802-8fc8-40d2-8297-1934b8ce1503\"",
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Network/virtualNetworks/nettocc20240214v4VNET/virtualNetworkPeerings/nettocc20240214v4-nettocc20240214v4VNET-TO-nettovpn2-nettovpn2vnet1",
  "name": "nettocc20240214v4-nettocc20240214v4VNET-TO-nettovpn2-nettovpn2vnet1",
  "peeringState": "Connected",
  "peeringSyncLevel": "FullyInSync",
  "provisioningState": "Succeeded",
  "remoteAddressSpace": {
    "addressPrefixes": [
      "10.254.0.0/25"
    ]
  },
  "remoteVirtualNetwork": {
    "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettovpn2/providers/Microsoft.Network/virtualNetworks/nettovpn2vnet1",
    "resourceGroup": "nettovpn2"
  },
  "remoteVirtualNetworkAddressSpace": {
    "addressPrefixes": [
      "10.254.0.0/25"
    ]
  },
  "resourceGroup": "nettocc20240214v4",
  "resourceGuid": "acacc09f-27cb-019e-3dfe-85576d58a27b",
  "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
  "useRemoteGateways": true
}
+ check_error 0
+ error=0
+ [[ 0 -ne 0 ]]
+ set +x
AllowForwardedTraffic    AllowGatewayTransit    AllowVirtualNetworkAccess    DoNotVerifyRemoteGateways    Name                                                                 PeeringState    PeeringSyncLevel    ProvisioningState    ResourceGroup    ResourceGuid                          UseRemoteGateways
-----------------------  ---------------------  ---------------------------  ---------------------------  -------------------------------------------------------------------  --------------  ------------------  -------------------  ---------------  ------------------------------------  -------------------
True                     True                   True                         False                        nettovpn2-nettovpn2vnet1-TO-nettocc20240208v3-nettocc20240208v3VNET  Connected       FullyInSync         Succeeded            nettovpn2        95b35e1b-8b28-025d-1061-32f57d78abf9  False
True                     True                   True                         False                        nettovpn2-nettovpn2vnet1-TO-nettocc20240214v1-nettocc20240214v1VNET  Connected       FullyInSync         Succeeded            nettovpn2        c01e56b9-f30d-0081-2d00-a1c8a79e240e  False
True                     True                   True                         False                        nettovpn2-nettovpn2vnet1-TO-nettocc20240214v2-nettocc20240214v2VNET  Connected       FullyInSync         Succeeded            nettovpn2        e524da35-7ebe-0838-3e9b-1f27bdf5e7c6  False
False                    True                   True                         False                        t2                                                                   Connected       FullyInSync         Succeeded            nettovpn2        6d59d154-b575-0bcb-0c8b-1a445a1c2785  False
True                     True                   True                         False                        nettovpn2-nettovpn2vnet1-TO-nettocc20240214v4-nettocc20240214v4VNET  Connected       FullyInSync         Succeeded            nettovpn2        acacc09f-27cb-019e-3dfe-85576d58a27b  False
AllowForwardedTraffic    AllowGatewayTransit    AllowVirtualNetworkAccess    DoNotVerifyRemoteGateways    Name                                                                 PeeringState    PeeringSyncLevel    ProvisioningState    ResourceGroup      ResourceGuid                          UseRemoteGateways
-----------------------  ---------------------  ---------------------------  ---------------------------  -------------------------------------------------------------------  --------------  ------------------  -------------------  -----------------  ------------------------------------  -------------------
True                     False                  True                         False                        nettocc20240214v4-nettocc20240214v4VNET-TO-nettovpn2-nettovpn2vnet1  Connected       FullyInSync         Succeeded            nettocc20240214v4  acacc09f-27cb-019e-3dfe-85576d58a27b  True
+ [[ 0 -ne 0 ]]
+ VPNVNETPEERED=true
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ rm -f create_peering_vpn.sh
+ set -e
+ create_storage_account
+ showmsg 'Create storage account: nettocc20240214v4sa'
+ msg='Create storage account: nettocc20240214v4sa'
+ printf '[33m%-70s[0m' 'Create storage account: nettocc20240214v4sa'
+ az storage account create -n nettocc20240214v4sa -g nettocc20240214v4 --sku Standard_LRS
{
  "accessTier": "Hot",
  "accountMigrationInProgress": null,
  "allowBlobPublicAccess": false,
  "allowCrossTenantReplication": false,
  "allowSharedKeyAccess": null,
  "allowedCopyScope": null,
  "azureFilesIdentityBasedAuthentication": null,
  "blobRestoreStatus": null,
  "creationTime": "2024-02-14T22:24:00.542237+00:00",
  "customDomain": null,
  "defaultToOAuthAuthentication": null,
  "dnsEndpointType": null,
  "enableHttpsTrafficOnly": true,
  "enableNfsV3": null,
  "encryption": {
    "encryptionIdentity": null,
    "keySource": "Microsoft.Storage",
    "keyVaultProperties": null,
    "requireInfrastructureEncryption": null,
    "services": {
      "blob": {
        "enabled": true,
        "keyType": "Account",
        "lastEnabledTime": "2024-02-14T22:24:01.136006+00:00"
      },
      "file": {
        "enabled": true,
        "keyType": "Account",
        "lastEnabledTime": "2024-02-14T22:24:01.136006+00:00"
      },
      "queue": null,
      "table": null
    }
  },
  "extendedLocation": null,
  "failoverInProgress": null,
  "geoReplicationStats": null,
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.Storage/storageAccounts/nettocc20240214v4sa",
  "identity": null,
  "immutableStorageWithVersioning": null,
  "isHnsEnabled": null,
  "isLocalUserEnabled": null,
  "isSftpEnabled": null,
  "isSkuConversionBlocked": null,
  "keyCreationTime": {
    "key1": "2024-02-14T22:24:00.729746+00:00",
    "key2": "2024-02-14T22:24:00.729746+00:00"
  },
  "keyPolicy": null,
  "kind": "StorageV2",
  "largeFileSharesState": null,
  "lastGeoFailoverTime": null,
  "location": "eastus",
  "minimumTlsVersion": "TLS1_0",
  "name": "nettocc20240214v4sa",
  "networkRuleSet": {
    "bypass": "AzureServices",
    "defaultAction": "Allow",
    "ipRules": [],
    "ipv6Rules": [],
    "resourceAccessRules": null,
    "virtualNetworkRules": []
  },
  "primaryEndpoints": {
    "blob": "https://nettocc20240214v4sa.blob.core.windows.net/",
    "dfs": "https://nettocc20240214v4sa.dfs.core.windows.net/",
    "file": "https://nettocc20240214v4sa.file.core.windows.net/",
    "internetEndpoints": null,
    "microsoftEndpoints": null,
    "queue": "https://nettocc20240214v4sa.queue.core.windows.net/",
    "table": "https://nettocc20240214v4sa.table.core.windows.net/",
    "web": "https://nettocc20240214v4sa.z13.web.core.windows.net/"
  },
  "primaryLocation": "eastus",
  "privateEndpointConnections": [],
  "provisioningState": "Succeeded",
  "publicNetworkAccess": null,
  "resourceGroup": "nettocc20240214v4",
  "routingPreference": null,
  "sasPolicy": null,
  "secondaryEndpoints": null,
  "secondaryLocation": null,
  "sku": {
    "name": "Standard_LRS",
    "tier": "Standard"
  },
  "statusOfPrimary": "available",
  "statusOfSecondary": null,
  "storageAccountSkuConversionStatus": null,
  "tags": {},
  "type": "Microsoft.Storage/storageAccounts"
}
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ create_keyvault
+ showmsg 'Create keyvault: nettocc20240214v4kv'
+ msg='Create keyvault: nettocc20240214v4kv'
+ printf '[33m%-70s[0m' 'Create keyvault: nettocc20240214v4kv'
+ az keyvault create --resource-group nettocc20240214v4 --name nettocc20240214v4kv --location eastus --enabled-for-deployment true --enabled-for-disk-encryption true --enabled-for-template-deployment true
{
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.KeyVault/vaults/nettocc20240214v4kv",
  "location": "eastus",
  "name": "nettocc20240214v4kv",
  "properties": {
    "accessPolicies": [
      {
        "applicationId": null,
        "objectId": "3973087a-9d36-43ff-bf1a-3dc7275f3363",
        "permissions": {
          "certificates": [
            "all"
          ],
          "keys": [
            "all"
          ],
          "secrets": [
            "all"
          ],
          "storage": [
            "all"
          ]
        },
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
      }
    ],
    "createMode": null,
    "enablePurgeProtection": null,
    "enableRbacAuthorization": null,
    "enableSoftDelete": true,
    "enabledForDeployment": true,
    "enabledForDiskEncryption": true,
    "enabledForTemplateDeployment": true,
    "hsmPoolResourceId": null,
    "networkAcls": null,
    "privateEndpointConnections": null,
    "provisioningState": "Succeeded",
    "publicNetworkAccess": "Enabled",
    "sku": {
      "family": "A",
      "name": "standard"
    },
    "softDeleteRetentionInDays": 90,
    "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
    "vaultUri": "https://nettocc20240214v4kv.vault.azure.net/"
  },
  "resourceGroup": "nettocc20240214v4",
  "systemData": {
    "createdAt": "2024-02-14T22:24:23.314000+00:00",
    "createdBy": "marconetto@microsoft.com",
    "createdByType": "User",
    "lastModifiedAt": "2024-02-14T22:24:23.314000+00:00",
    "lastModifiedBy": "marconetto@microsoft.com",
    "lastModifiedByType": "User"
  },
  "tags": {},
  "type": "Microsoft.KeyVault/vaults"
}
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ create_cloud_init
++ az account show
+ account_info='{
  "environmentName": "AzureCloud",
  "homeTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "id": "f5a67d06-2d09-4090-91cc-e3298907a021",
  "isDefault": true,
  "managedByTenants": [
    {
      "tenantId": "2f4a9838-26b7-47ee-be60-ccc1fdec5953"
    }
  ],
  "name": "AG_CI_CE_SWHPC_kanchanm",
  "state": "Enabled",
  "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "user": {
    "name": "marconetto@microsoft.com",
    "type": "user"
  }
}'
++ echo '{
  "environmentName": "AzureCloud",
  "homeTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "id": "f5a67d06-2d09-4090-91cc-e3298907a021",
  "isDefault": true,
  "managedByTenants": [
    {
      "tenantId": "2f4a9838-26b7-47ee-be60-ccc1fdec5953"
    }
  ],
  "name": "AG_CI_CE_SWHPC_kanchanm",
  "state": "Enabled",
  "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "user": {
    "name": "marconetto@microsoft.com",
    "type": "user"
  }
}'
++ jq -r .id
+ azure_subscription_id=f5a67d06-2d09-4090-91cc-e3298907a021
++ echo '{
  "environmentName": "AzureCloud",
  "homeTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "id": "f5a67d06-2d09-4090-91cc-e3298907a021",
  "isDefault": true,
  "managedByTenants": [
    {
      "tenantId": "2f4a9838-26b7-47ee-be60-ccc1fdec5953"
    }
  ],
  "name": "AG_CI_CE_SWHPC_kanchanm",
  "state": "Enabled",
  "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "user": {
    "name": "marconetto@microsoft.com",
    "type": "user"
  }
}'
++ jq -r .tenantId
+ azure_tenant_id=72f988bf-86f1-41af-91ab-2d7cd011db47
++ echo '{
  "environmentName": "AzureCloud",
  "homeTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "id": "f5a67d06-2d09-4090-91cc-e3298907a021",
  "isDefault": true,
  "managedByTenants": [
    {
      "tenantId": "2f4a9838-26b7-47ee-be60-ccc1fdec5953"
    }
  ],
  "name": "AG_CI_CE_SWHPC_kanchanm",
  "state": "Enabled",
  "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "user": {
    "name": "marconetto@microsoft.com",
    "type": "user"
  }
}'
++ jq -r .name
+ cyclecloud_subscription_name=AG_CI_CE_SWHPC_kanchanm
+ cyclecloud_admin_name=azureuser
+ cyclecloud_storage_account=nettocc20240214v4sa
+ cyclecloud_storage_container=cyclecloud
+ cyclecloud_location=eastus
+ cyclecloud_rg=nettocc20240214v4
+ cat
++ create_cluster_cloudinit_files AG_CI_CE_SWHPC_kanchanm
++ [[ -z '' ]]
++ return
+ set_keyvault_secrets
+ showmsg 'Set keyvault secrets'
+ msg='Set keyvault secrets'
+ printf '[33m%-70s[0m' 'Set keyvault secrets'
+ az keyvault secret set --name ccpassword --vault-name nettocc20240214v4kv --value Q1w2e3r4.123
+ az keyvault secret set --name ccpubkey --vault-name nettocc20240214v4kv --value 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWvNZq8+rzA054S41CPBDsYblxNyYiQyX94z4ptc3LOayg8z1FrhNQNQplXHBM7XcnVDXIHQmjnU+NEoDLvyEhuDvUNhDPBDrcYrXbID/M9VPLLiKCWK8wRyPNuhmAj/FguiWxvi0rqSXt3iIEPNV63XWs7sZq3tU1Inokepfb3/4E5xpJQ5DqDmAXeFI0HYtFDufJPETNpGImv0pDxRQvCndnktnOS+KNUiE9DjGp6oP53HGYwCJk798WI3L2gx0kPJBOAdeXcZmu3w7sJWm8zObq1/6x3Lgpkb6BheOJXyD470LEQ8tegvbbeuvlHGO7lvi1SL/xtUjAlqsdotsv mstelmar@mstelmar'
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ create_vm
+ showmsg 'Start CycleCloud VM provisioning request'
+ msg='Start CycleCloud VM provisioning request'
+ printf '[33m%-70s[0m' 'Start CycleCloud VM provisioning request'
+ az vm create -n nettocc20240214v4vm01 -g nettocc20240214v4 --image Canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2:latest --size Standard_E32s_v4 --vnet-name nettocc20240214v4VNET --subnet nettocc20240214v4SUBNET --public-ip-address '' --admin-username azureuser --assign-identity --generate-ssh-keys --no-wait --custom-data cloudinit.file
+ set +e
+ true
++ az vm show -g nettocc20240214v4 -n nettocc20240214v4vm01 --query identity.principalId -o tsv
ERROR: (ResourceNotFound) The Resource 'Microsoft.Compute/virtualMachines/nettocc20240214v4vm01' under resource group 'nettocc20240214v4' was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix
Code: ResourceNotFound
Message: The Resource 'Microsoft.Compute/virtualMachines/nettocc20240214v4vm01' under resource group 'nettocc20240214v4' was not found. For more details please go to https://aka.ms/ARMResourceNotFoundFix
+ vm_principal=
+ error=3
+ [[ 3 == 0 ]]
+ sleep 10
+ echo 'waiting for VM principal ID...'
waiting for VM principal ID...
+ true
++ az vm show -g nettocc20240214v4 -n nettocc20240214v4vm01 --query identity.principalId -o tsv
+ vm_principal=6a4df935-200a-4a2c-88ee-2e10a8a784cc
+ error=0
+ [[ 0 == 0 ]]
+ break
+ echo 'VM principal ID: 6a4df935-200a-4a2c-88ee-2e10a8a784cc'
VM principal ID: 6a4df935-200a-4a2c-88ee-2e10a8a784cc
+ set -e
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ add_vm_permission_subscription
+ showmsg 'Add VM principal ID access to subscription'
+ msg='Add VM principal ID access to subscription'
+ printf '[33m%-70s[0m' 'Add VM principal ID access to subscription'
++ az account show
+ account_info='{
  "environmentName": "AzureCloud",
  "homeTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "id": "f5a67d06-2d09-4090-91cc-e3298907a021",
  "isDefault": true,
  "managedByTenants": [
    {
      "tenantId": "2f4a9838-26b7-47ee-be60-ccc1fdec5953"
    }
  ],
  "name": "AG_CI_CE_SWHPC_kanchanm",
  "state": "Enabled",
  "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "user": {
    "name": "marconetto@microsoft.com",
    "type": "user"
  }
}'
++ echo '{
  "environmentName": "AzureCloud",
  "homeTenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "id": "f5a67d06-2d09-4090-91cc-e3298907a021",
  "isDefault": true,
  "managedByTenants": [
    {
      "tenantId": "2f4a9838-26b7-47ee-be60-ccc1fdec5953"
    }
  ],
  "name": "AG_CI_CE_SWHPC_kanchanm",
  "state": "Enabled",
  "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
  "user": {
    "name": "marconetto@microsoft.com",
    "type": "user"
  }
}'
++ jq -r .id
+ subscription=f5a67d06-2d09-4090-91cc-e3298907a021
++ az vm show -g nettocc20240214v4 -n nettocc20240214v4vm01 --query identity.principalId -o tsv
+ VMPrincipalID=6a4df935-200a-4a2c-88ee-2e10a8a784cc
+ az role assignment create --assignee-principal-type ServicePrincipal --assignee-object-id 6a4df935-200a-4a2c-88ee-2e10a8a784cc --role Contributor --scope /subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021
{
  "condition": null,
  "conditionVersion": null,
  "createdBy": null,
  "createdOn": "2024-02-14T22:25:26.417031+00:00",
  "delegatedManagedIdentityResourceId": null,
  "description": null,
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/providers/Microsoft.Authorization/roleAssignments/2414c807-3363-4474-99a1-30bacab1a7ba",
  "name": "2414c807-3363-4474-99a1-30bacab1a7ba",
  "principalId": "6a4df935-200a-4a2c-88ee-2e10a8a784cc",
  "principalType": "ServicePrincipal",
  "roleDefinitionId": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
  "scope": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021",
  "type": "Microsoft.Authorization/roleAssignments",
  "updatedBy": "3973087a-9d36-43ff-bf1a-3dc7275f3363",
  "updatedOn": "2024-02-14T22:25:26.896039+00:00"
}
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ add_vm_permission_keyvault
+ showmsg 'Add VM principal ID permission to keyvault: nettocc20240214v4kv'
+ msg='Add VM principal ID permission to keyvault: nettocc20240214v4kv'
+ printf '[33m%-70s[0m' 'Add VM principal ID permission to keyvault: nettocc20240214v4kv'
++ az vm show -g nettocc20240214v4 -n nettocc20240214v4vm01 --query identity.principalId -o tsv
+ VMPrincipalID=6a4df935-200a-4a2c-88ee-2e10a8a784cc
+ echo 6a4df935-200a-4a2c-88ee-2e10a8a784cc
6a4df935-200a-4a2c-88ee-2e10a8a784cc
+ az keyvault set-policy --resource-group nettocc20240214v4 --name nettocc20240214v4kv --object-id 6a4df935-200a-4a2c-88ee-2e10a8a784cc --key-permissions all --secret-permissions all
{
  "id": "/subscriptions/f5a67d06-2d09-4090-91cc-e3298907a021/resourceGroups/nettocc20240214v4/providers/Microsoft.KeyVault/vaults/nettocc20240214v4kv",
  "location": "eastus",
  "name": "nettocc20240214v4kv",
  "properties": {
    "accessPolicies": [
      {
        "applicationId": null,
        "objectId": "3973087a-9d36-43ff-bf1a-3dc7275f3363",
        "permissions": {
          "certificates": [
            "all"
          ],
          "keys": [
            "all"
          ],
          "secrets": [
            "all"
          ],
          "storage": [
            "all"
          ]
        },
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
      },
      {
        "applicationId": null,
        "objectId": "6a4df935-200a-4a2c-88ee-2e10a8a784cc",
        "permissions": {
          "certificates": null,
          "keys": [
            "all"
          ],
          "secrets": [
            "all"
          ],
          "storage": null
        },
        "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47"
      }
    ],
    "createMode": null,
    "enablePurgeProtection": null,
    "enableRbacAuthorization": null,
    "enableSoftDelete": true,
    "enabledForDeployment": true,
    "enabledForDiskEncryption": true,
    "enabledForTemplateDeployment": true,
    "hsmPoolResourceId": null,
    "networkAcls": null,
    "privateEndpointConnections": null,
    "provisioningState": "Succeeded",
    "publicNetworkAccess": "Enabled",
    "sku": {
      "family": "A",
      "name": "standard"
    },
    "softDeleteRetentionInDays": 90,
    "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
    "vaultUri": "https://nettocc20240214v4kv.vault.azure.net/"
  },
  "resourceGroup": "nettocc20240214v4",
  "systemData": {
    "createdAt": "2024-02-14T22:24:23.314000+00:00",
    "createdBy": "marconetto@microsoft.com",
    "createdByType": "User",
    "lastModifiedAt": "2024-02-14T22:25:36.277000+00:00",
    "lastModifiedBy": "marconetto@microsoft.com",
    "lastModifiedByType": "User"
  },
  "tags": {},
  "type": "Microsoft.KeyVault/vaults"
}
+ showstatusmsg done
+ statusmsg=done
+ [[ done == \d\o\n\e ]]
+ printf '%s\n' '[32m[done][0m'
+ [[ done == \f\a\i\l\e\d ]]
+ [[ done == \w\a\r\n\i\n\g ]]
+ return 0
+ show_vm_access
+ showmsginfo 'CycleCloud access when cloud-init is done'
+ msg='CycleCloud access when cloud-init is done'
+ printf '[33m%-70s%s\n' 'CycleCloud access when cloud-init is done' '[36m[info][0m'
++ az vm show -g nettocc20240214v4 -n nettocc20240214v4vm01 --query privateIps -d --out tsv
+ ipaddress=10.63.0.4
+ showmsginfo 'CycleCloud via SSH: ssh [-i <privsshkey>] azureuser@10.63.0.4'
+ msg='CycleCloud via SSH: ssh [-i <privsshkey>] azureuser@10.63.0.4'
+ printf '[33m%-70s%s\n' 'CycleCloud via SSH: ssh [-i <privsshkey>] azureuser@10.63.0.4' '[36m[info][0m'
+ showmsginfo 'CycleCloud via WEB: http://10.63.0.4:8080'
+ msg='CycleCloud via WEB: http://10.63.0.4:8080'
+ printf '[33m%-70s%s\n' 'CycleCloud via WEB: http://10.63.0.4:8080' '[36m[info][0m'
+ wait_cyclecloud
+ '[' true == false ']'
+ set +e
++ get_cyclecloud_ip
+++ az vm show -g nettocc20240214v4 -n nettocc20240214v4vm01 --query privateIps -d --out tsv
++ ccvmipaddress=10.63.0.4
++ echo 10.63.0.4
+ ccvmipaddress=10.63.0.4
+ pollingdelay=10
+ showmsg 'Polling CycleCloud (VPN required). You can control-c at any time '
+ msg='Polling CycleCloud (VPN required). You can control-c at any time '
+ printf '[33m%-70s[0m' 'Polling CycleCloud (VPN required). You can control-c at any time '
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '/-\|'
+ sp='-\|/'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '-\|/'
+ sp='\|/-'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '\|/-'
+ sp='|/-\'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '|/-\'
+ sp='/-\|'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '/-\|'
+ sp='-\|/'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '-\|/'
+ sp='\|/-'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '\|/-'
+ sp='|/-\'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '|/-\'
+ sp='/-\|'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '/-\|'
+ sp='-\|/'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '-\|/'
+ sp='\|/-'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
+ gotaccess=
+ error=255
+ echo error=255
error=255
+ [[ 255 == 0 ]]
+ sleep 10
+ spinanim
+ printf '\b%.1s' '\|/-'
+ sp='|/-\'
+ true
++ eval 'ssh -o StrictHostKeychecking=no -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null' azureuser@10.63.0.4 hostname
